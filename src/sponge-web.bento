/**  sponge-web.bento
 *
 *   Front end for sponge.
 *
 *
 **/

site sponge [=

    /-------- global values -----------------------/

    global User_Table(utbl{}){} = utbl

    /-------- initialization ----------------------/

    init [=
        load_users("users");
    =]
    
    session_init [=
    =]

    load_users(filename) [=
        file user_file = file(filename)
        table_loader(str){} = table.parse(str)
        
        
        log("looking for user file " + user_file.canonical_path);
        
        if (!user_file.exists) [=
            log("user file not found; aborting");
            redirect error("User file " + filename + " not found.")

        =] else [=
            eval(User_Table(table_loader(user_file.contents)));
        =]
        
        if (!User_Table) [=
            redirect error("Invalid user file " + filename + ".")
        =]
        
        log("initialized user table");
        for u in User_Table.keys [=
            log("  ...user: " + u);
        =]
    =]
    
    /-------- error handling ----------------------/

    component error(msg) [=
        component_class = "error_msg"
        message = msg
        
        "Error: ";
        msg;
    =]


    /-------- login status and information --------/

    this_username(u) = u

    boolean logged_in(boolean flag) = flag

    dynamic boolean authenticate(username, password) [=
        if (User_Table{username} == password) [=
            eval(this_username(username));
            true;
        =] else [=
            false;
        =]
    =]

    boolean assented(boolean flag) = flag

    dynamic assent(username) [=
        /-- TODO: log assent --/    
    =]



    /-------- styles and appearance constants -----/

    SPLASH_LOGO = "images/sponge-logo-560x128.png"

    color main_bgcolor = "#8f9faf"

    /-------- base page ---------------------------/

    page(*) base_page(params{}) [=
        boolean needs_login [?]    
        boolean needs_assent [?]
        
        style [| 
            html, body { 
                width: 100%;
                height: 100%;
                margin: 0 0 0 0;
                background-image: url("images/seamless-sponge-texture.jpg");
                background-color: [= main_bgcolor; =];
            }

            .centered_container {
                position: relative;
            }
            
            .centered_box {
                position: absolute;
                left: 50%;
                top: 50%;
                margin-right: -50%;
                transform: translate(-50%, -50%);
            }

            #splash_image_holder img {
                display: block;
            }
            
            .gatekeeper {
                width: 30em;
            }
        |]        
        
        component splash_image_holder(img_url) [=
            id = "splash_image_holder"
            [| <img src="[= img_url; =]"> |]
        =]
        
        dynamic component login_splash_box [=
            id = "login_splash_box"
            component_class = "centered_box"
            splash_image_holder(SPLASH_LOGO);
            login_component(this_page);
        =]
        
        dynamic component assent_splash_box [=
            id = "assent_splash_box"
            component_class = "centered_box"
            assent_component(this_page);
        =]
        
        base_page this_page = owner    
        
        if (needs_login && !logged_in) [=
            login_splash_box;

        =] else if (needs_assent && !assented) [=
            assent_splash_box;
            
        =] else [=
            sub;
        =]    
    
    =]

    /-------- login mechanics ---------------------/

    component gatekeeper_component(base_page goto_page),(params{}) [=
        component_class = "gatekeeper"
    =]

    gatekeeper_component(*) login_component(base_page goto),(params{}) [=
        base_page goto_page = goto ? goto : params{"goto"}
        component this_component = owner
        field_ids[] = [ "username", "pass" ]
    
        if (params{"username"}) [=
            eval(logged_in(: authenticate(params{"username"}, params{"pass"}) :)); 
        =]
        if (logged_in) [=
            redirect goto_page
        =] else [=
            [| <div>Username: |]
            textedit("username", this_username, 20);
            [| </div><div>Password: |]
            passwordedit("pass", "", 20);
            [| </div><div> |]
            submit_button("Login", "login", this_component, field_ids);
            [| </div> |]
        =]
    =]    

    gatekeeper_component(*) assent_component(base_page goto_page),(params{}) [=
    =]    


    /-------- home page ---------------------------/

    base_page(*) index(params{}) [=
        boolean needs_login = true    
        boolean needs_assent = true    
    
    =]

=]
